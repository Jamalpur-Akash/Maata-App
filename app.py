import streamlit as st
from deep_translator import GoogleTranslator
import os
import uuid
from datetime import datetime
from pytz import timezone
from PIL import Image, UnidentifiedImageError
from pathlib import Path

st.set_page_config(page_title="‡∞Æ‡∞æ‡∞ü ‡∞ï‡∞Æ‡±ç‡∞Ø‡±Ç‡∞®‡∞ø‡∞ü‡±Ä", layout="centered")

if "language" not in st.session_state:
    st.session_state.language = "‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å"

if "posts" not in st.session_state:
    st.session_state.posts = []

if "username" not in st.session_state:
    st.session_state.username = None

lang_map = {"‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å": "te", "‡§π‡§ø‡§Ç‡§¶‡•Ä": "hi", "English": "en"}
lang_choice = st.selectbox("üåê Language / ‡§≠‡§æ‡§∑‡§æ / ‡∞≠‡∞æ‡∞∑", options=["‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å", "‡§π‡§ø‡§Ç‡§¶‡•Ä", "English"])
st.session_state.language = lang_choice
lang_code = lang_map[lang_choice]

def t(text):
    return GoogleTranslator(source="auto", target=lang_code).translate(text)

def save_post(username, text, image_path):
    tz = timezone("Asia/Kolkata")
    time_now = datetime.now(tz).strftime("%Y-%m-%d %H:%M:%S %Z")
    post = {"username": username, "text": text, "image": image_path, "time": time_now}
    st.session_state.posts.insert(0, post)

def login_signup():
    st.radio(t("Login or Signup"), ["‡∞∏‡±à‡∞®‡±ç ‡∞á‡∞®‡±ç", "‡∞∏‡±à‡∞®‡±ç ‡∞Ö‡∞™‡±ç"], key="auth_mode", horizontal=True)
    username = st.text_input(t("Enter Username"))
    password = st.text_input(t("Password"), type="password")
    if st.button(t("Login")):
        if username and password:
            st.session_state.username = username
            st.experimental_rerun()

if not st.session_state.username:
    login_signup()
    st.stop()

st.sidebar.title("‡∞Æ‡∞æ‡∞ü ‡∞™‡±ç‡∞∞‡∞æ‡∞ú‡±Ü‡∞ï‡±ç‡∞ü‡±ç")
nav = st.sidebar.radio("", [t("‡∞™‡±ç‡∞∞‡±ä‡∞´‡±à‡∞≤‡±ç"), t("‡∞™‡±ã‡∞∏‡±ç‡∞ü‡±ç ‡∞ö‡±á‡∞Ø‡∞ø"), t("‡∞™‡±ã‡∞∏‡±ç‡∞ü‡±Å‡∞≤‡±Å")])

if nav == t("‡∞™‡±ç‡∞∞‡±ä‡∞´‡±à‡∞≤‡±ç"):
    st.title(t("‡∞™‡±ç‡∞∞‡±ä‡∞´‡±à‡∞≤‡±ç"))
    st.write(f"{t('Welcome')}, {st.session_state.username}")

elif nav == t("‡∞™‡±ã‡∞∏‡±ç‡∞ü‡±ç ‡∞ö‡±á‡∞Ø‡∞ø"):
    st.title(t("‡∞™‡±ã‡∞∏‡±ç‡∞ü‡±ç ‡∞ö‡±á‡∞Ø‡∞ø"))
    text = st.text_area(t("‡∞Æ‡±Ä ‡∞∏‡∞Ç‡∞¶‡±á‡∞∂‡∞æ‡∞®‡±ç‡∞®‡∞ø ‡∞∞‡∞æ‡∞Ø‡∞Ç‡∞°‡∞ø"))
    img_file = st.file_uploader(t("‡∞õ‡∞æ‡∞Ø‡∞æ‡∞ö‡∞ø‡∞§‡±ç‡∞∞‡∞æ‡∞®‡±ç‡∞®‡∞ø ‡∞Ö‡∞™‡±ç‡∞≤‡±ã‡∞°‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø"), type=["jpg", "png", "jpeg"])
    image_path = None
    if img_file:
        folder = Path("storage/uploads")
        folder.mkdir(parents=True, exist_ok=True)
        image_id = str(uuid.uuid4()) + ".jpg"
        image_path = folder / image_id
        with open(image_path, "wb") as f:
            f.write(img_file.read())
    if st.button(t("‡∞™‡±ã‡∞∏‡±ç‡∞ü‡±ç")):
        if text:
            save_post(st.session_state.username, text, str(image_path) if image_path else "")
            st.success(t("‡∞™‡±ã‡∞∏‡±ç‡∞ü‡±ç ‡∞µ‡∞ø‡∞ú‡∞Ø‡∞µ‡∞Ç‡∞§‡∞Ç"))

elif nav == t("‡∞™‡±ã‡∞∏‡±ç‡∞ü‡±Å‡∞≤‡±Å"):
    st.title(f"üì¢ {t('Posts')}")
    for i, post in enumerate(st.session_state.posts):
        st.markdown(f"**@{post['username']}** _{post['time']}_")
        translated_text = GoogleTranslator(source="auto", target=lang_code).translate(post["text"])
        st.write(translated_text)
        if post["image"]:
            try:
                st.image(post["image"], use_container_width=True)
            except UnidentifiedImageError:
                st.warning(t("‡∞ö‡∞ø‡∞§‡±ç‡∞∞‡∞æ‡∞®‡±ç‡∞®‡∞ø ‡∞™‡±ç‡∞∞‡∞¶‡∞∞‡±ç‡∞∂‡∞ø‡∞Ç‡∞ö‡∞≤‡±á‡∞ï‡∞™‡±ã‡∞Ø‡∞æ‡∞Ç"))
        if st.button(t("Delete"), key=f"delete_{i}"):
            st.session_state.posts.pop(i)
            st.experimental_rerun()
                            
