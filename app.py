import streamlit as st
from datetime import datetime
import pytz
import uuid
import os
from pathlib import Path
from deep_translator import GoogleTranslator
from PIL import Image, UnidentifiedImageError
import io
import base64

st.set_page_config("‡∞Æ‡∞æ‡∞ü - ‡∞ï‡∞Æ‡±ç‡∞Ø‡±Ç‡∞®‡∞ø‡∞ü‡±Ä", "üëã", "centered")

LANGUAGES = {"‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å": "te", "‡§π‡§ø‡§®‡•ç‡§¶‡•Ä": "hi", "English": "en"}
if "language" not in st.session_state:
    st.session_state.language = "‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å"
if "posts" not in st.session_state:
    st.session_state.posts = []
if "username" not in st.session_state:
    st.session_state.username = "Nanda kishor Reddy"

def t(text):
    if st.session_state.language == "‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å":
        return text
    return GoogleTranslator(source='auto', target=LANGUAGES[st.session_state.language]).translate(text)

def translate_post(post):
    lang = st.session_state.language
    if lang == "‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å":
        return post
    translated_post = post.copy()
    for key in ["text", "timestamp", "username"]:
        if key in post and isinstance(post[key], str):
            translated_post[key] = GoogleTranslator(source='auto', target=LANGUAGES[lang]).translate(post[key])
    return translated_post

def save_post(text, image_file):
    post = {
        "id": str(uuid.uuid4()),
        "username": st.session_state.username,
        "text": text,
        "timestamp": datetime.now(pytz.timezone("Asia/Kolkata")).strftime("%Y-%m-%d %H:%M:%S %Z"),
        "media_path": None
    }
    if image_file:
        media_path = f"storage/uploads/{uuid.uuid4()}.jpg"
        Path("storage/uploads").mkdir(parents=True, exist_ok=True)
        with open(media_path, "wb") as f:
            f.write(image_file.read())
        post["media_path"] = media_path
    st.session_state.posts.insert(0, post)

def post_section():
    st.subheader(t("‡∞™‡±ã‡∞∏‡±ç‡∞ü‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø"))
    text = st.text_area(t("‡∞Æ‡±Ä ‡∞∏‡∞Ç‡∞¶‡±á‡∞∂‡∞Ç"), max_chars=500)
    image = st.file_uploader(t("‡∞õ‡∞ø‡∞§‡±ç‡∞∞‡∞æ‡∞®‡±ç‡∞®‡∞ø ‡∞Ö‡∞™‡±ç‚Äå‡∞≤‡±ã‡∞°‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø"), type=["png", "jpg", "jpeg"])
    if st.button(t("‡∞à ‡∞™‡±ã‡∞∏‡±ç‡∞ü‡±ç‚Äå‡∞®‡±Å ‡∞∑‡±á‡∞∞‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø")):
        if text or image:
            save_post(text, image)
        else:
            st.warning(t("‡∞¶‡∞Ø‡∞ö‡±á‡∞∏‡∞ø ‡∞ü‡±Ü‡∞ï‡±ç‡∞∏‡±ç‡∞ü‡±ç ‡∞≤‡±á‡∞¶‡∞æ ‡∞ö‡∞ø‡∞§‡±ç‡∞∞‡∞Ç ‡∞á‡∞µ‡±ç‡∞µ‡∞Ç‡∞°‡∞ø"))

def display_posts():
    st.subheader(t("‡∞™‡±ã‡∞∏‡±ç‡∞ü‡±ç‚Äå‡∞≤‡±Å"))
    for post in st.session_state.posts:
        post = translate_post(post)
        st.markdown(f"**@{post['username']}** ‚Ä¢ {post['timestamp']}")
        st.write(post["text"])
        if post.get("media_path"):
            try:
                with open(post["media_path"], "rb") as f:
                    image = Image.open(io.BytesIO(f.read()))
                    st.image(image, use_container_width=True)
            except UnidentifiedImageError:
                st.warning(t("‡∞ö‡∞ø‡∞§‡±ç‡∞∞‡∞æ‡∞®‡±ç‡∞®‡∞ø ‡∞≤‡±ã‡∞°‡±ç ‡∞ö‡±á‡∞Ø‡∞≤‡±á‡∞ï‡∞™‡±ã‡∞Ø‡∞æ‡∞Ç"))

st.sidebar.title(t("‡∞®‡∞æ‡∞µ‡∞ø‡∞ó‡±á‡∞∑‡∞®‡±ç"))
option = st.sidebar.radio(t("‡∞Æ‡±Ü‡∞®‡±Ç"), [t("üè† ‡∞π‡±ã‡∞Æ‡±ç"), t("üë§ ‡∞™‡±ç‡∞∞‡±ä‡∞´‡±à‡∞≤‡±ç"), t("üì§ ‡∞™‡±ã‡∞∏‡±ç‡∞ü‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø")])
st.sidebar.selectbox("üåê " + t("‡∞≠‡∞æ‡∞∑"), list(LANGUAGES.keys()), index=list(LANGUAGES.keys()).index(st.session_state.language), key="language")

if option == t("üè† ‡∞π‡±ã‡∞Æ‡±ç"):
    display_posts()
elif option == t("üì§ ‡∞™‡±ã‡∞∏‡±ç‡∞ü‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø"):
    post_section()
    display_posts()
elif option == t("üë§ ‡∞™‡±ç‡∞∞‡±ä‡∞´‡±à‡∞≤‡±ç"):
    st.subheader(t("‡∞®‡∞æ ‡∞π‡±ã‡∞Æ‡±ç ‡∞™‡±á‡∞ú‡±Ä"))
    st.markdown(f"**{t('‡∞™‡±á‡∞∞‡±Å')}:** {st.session_state.username}")
    st.markdown(f"**{t('‡∞á‡∞Æ‡±Ü‡∞Ø‡∞ø‡∞≤‡±ç')}:** user@example.com")
    st.markdown(f"**{t('‡∞ú‡∞®‡±ç‡∞Æ‡∞§‡±á‡∞¶‡±Ä')}:** 2000-01-01")
    st.markdown(f"**{t('About')}:** {t('‡∞™‡±ç‡∞∞‡±ä‡∞´‡±à‡∞≤‡±ç ‡∞µ‡∞ø‡∞µ‡∞∞‡∞£ ‡∞≤‡∞≠‡∞ø‡∞Ç‡∞ö‡∞≤‡±á‡∞¶‡±Å')}")
        
