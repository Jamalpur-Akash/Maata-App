import streamlit as st
import pandas as pd
import uuid
import os
from pathlib import Path

st.set_page_config(page_title="‡∞Æ‡∞æ‡∞ü - ‡∞ï‡∞Æ‡±ç‡∞Ø‡±Ç‡∞®‡∞ø‡∞ü‡±Ä", page_icon="üå∏", layout="centered")

STORAGE_DIR = Path("storage/uploads")
USER_CSV = STORAGE_DIR / "users.csv"
POSTS_CSV = STORAGE_DIR / "posts.csv"
INTERACTIONS_CSV = STORAGE_DIR / "interactions.csv"
STORAGE_DIR.mkdir(parents=True, exist_ok=True)

for file, cols in {
    USER_CSV: ["username", "password", "email", "about", "dob"],
    POSTS_CSV: ["post_id", "username", "timestamp", "caption", "media_path"],
    INTERACTIONS_CSV: ["interaction_id", "post_id", "username", "type", "content", "timestamp"]
}.items():
    if not file.exists():
        pd.DataFrame(columns=cols).to_csv(file, index=False)

st.markdown("""
    <style>
    .stButton>button { border-radius: 8px; background-color: #6c5ce7; color: white; font-weight: bold; }
    .stTextInput>div>div>input, .stTextArea textarea { border-radius: 8px; }
    </style>
""", unsafe_allow_html=True)

st.markdown("""
    <h1 style='text-align: center; color: #6c5ce7;'>‡∞Æ‡∞æ‡∞ü - ‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å ‡∞ï‡∞Æ‡±ç‡∞Ø‡±Ç‡∞®‡∞ø‡∞ü‡±Ä üå∏</h1>
    <p style='text-align: center;'>‡∞Æ‡±Ä ‡∞≠‡∞æ‡∞µ‡∞æ‡∞≤‡∞®‡±Å ‡∞™‡∞Ç‡∞ö‡±Å‡∞ï‡±ã‡∞Ç‡∞°‡∞ø, ‡∞á‡∞§‡∞∞‡±Å‡∞≤‡∞§‡±ã ‡∞Æ‡∞Æ‡±á‡∞ï‡∞Ç ‡∞Ö‡∞µ‡±ç‡∞µ‡∞Ç‡∞°‡∞ø!</p>
    <hr style='border: 1px solid #ccc;'>
""", unsafe_allow_html=True)

if 'logged_in' not in st.session_state:
    st.session_state.logged_in = False
if 'username' not in st.session_state:
    st.session_state.username = None

def login_signup():
    mode = st.radio("‡∞Æ‡±ã‡∞°‡±ç ‡∞é‡∞Ç‡∞ö‡±Å‡∞ï‡±ã‡∞Ç‡∞°‡∞ø", ["‡∞≤‡∞æ‡∞ó‡∞ø‡∞®‡±ç", "‡∞∏‡±à‡∞®‡±ç ‡∞Ö‡∞™‡±ç"])
    username = st.text_input("‡∞µ‡∞ø‡∞®‡∞ø‡∞Ø‡±ã‡∞ó‡∞¶‡∞æ‡∞∞‡±Å ‡∞™‡±á‡∞∞‡±Å")
    password = st.text_input("‡∞™‡∞æ‡∞∏‡±ç‚Äå‡∞µ‡∞∞‡±ç‡∞°‡±ç", type="password")
    users_df = pd.read_csv(USER_CSV)

    if mode == "‡∞≤‡∞æ‡∞ó‡∞ø‡∞®‡±ç":
        if st.button("‡∞≤‡∞æ‡∞ó‡∞ø‡∞®‡±ç"):
            if ((users_df['username'] == username) & (users_df['password'] == password)).any():
                st.session_state.logged_in = True
                st.session_state.username = username
                st.experimental_rerun()
            else:
                st.error("‡∞§‡∞™‡±ç‡∞™‡±Å ‡∞≤‡∞æ‡∞ó‡∞ø‡∞®‡±ç ‡∞µ‡∞ø‡∞µ‡∞∞‡∞æ‡∞≤‡±Å.")
    else:
        email = st.text_input("‡∞á‡∞Æ‡±Ü‡∞Ø‡∞ø‡∞≤‡±ç")
        if st.button("‡∞∏‡±à‡∞®‡±ç ‡∞Ö‡∞™‡±ç"):
            if username in users_df['username'].values:
                st.error("‡∞Æ‡±Ä‡∞∞‡±Å ‡∞á‡∞™‡±ç‡∞™‡∞ü‡∞ø‡∞ï‡±á ‡∞®‡∞Æ‡±ã‡∞¶‡±Å ‡∞Ö‡∞Ø‡±ç‡∞Ø‡∞æ‡∞∞‡±Å. ‡∞¶‡∞Ø‡∞ö‡±á‡∞∏‡∞ø ‡∞≤‡∞æ‡∞ó‡∞ø‡∞®‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø.")
            else:
                new_user = pd.DataFrame([{
                    "username": username,
                    "password": password,
                    "email": email,
                    "about": "",
                    "dob": ""
                }])
                new_user.to_csv(USER_CSV, mode='a', header=False, index=False)
                st.success("‡∞∏‡±à‡∞®‡±ç ‡∞Ö‡∞™‡±ç ‡∞µ‡∞ø‡∞ú‡∞Ø‡∞µ‡∞Ç‡∞§‡∞Ç! ‡∞≤‡∞æ‡∞ó‡∞ø‡∞®‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø.")

def show_profile():
    st.subheader("üë§ ‡∞Æ‡±Ä ‡∞™‡±ç‡∞∞‡±ä‡∞´‡±à‡∞≤‡±ç")
    users_df = pd.read_csv(USER_CSV)
    user_row = users_df[users_df['username'] == st.session_state.username].iloc[0]
    st.image("https://cdn-icons-png.flaticon.com/512/847/847969.png", width=100)
    st.markdown(f"**@{user_row['username']}**")
    st.markdown(f"üìß {user_row['email']}")
    st.markdown(f"üìù ‡∞Æ‡±Ä ‡∞ó‡±Å‡∞∞‡∞ø‡∞Ç‡∞ö‡∞ø: {user_row['about'] or '‡∞≤‡∞≠‡∞ø‡∞Ç‡∞ö‡∞≤‡±á‡∞¶‡±Å'}")
    st.markdown(f"üéÇ ‡∞™‡±Å‡∞ü‡±ç‡∞ü‡∞ø‡∞® ‡∞§‡±á‡∞¶‡∞ø: {user_row['dob'] or '‡∞≤‡∞≠‡∞ø‡∞Ç‡∞ö‡∞≤‡±á‡∞¶‡±Å'}")

    with st.expander("‚úèÔ∏è ‡∞µ‡∞ø‡∞µ‡∞∞‡∞æ‡∞≤‡∞®‡±Å ‡∞∏‡∞µ‡∞∞‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø"):
        about = st.text_area("‡∞Æ‡±Ä ‡∞ó‡±Å‡∞∞‡∞ø‡∞Ç‡∞ö‡∞ø", value=user_row['about'])
        dob = st.date_input("‡∞™‡±Å‡∞ü‡±ç‡∞ü‡∞ø‡∞® ‡∞§‡±á‡∞¶‡∞ø", value=pd.to_datetime(user_row['dob']) if user_row['dob'] else pd.to_datetime("2000-01-01"))
        if st.button("‡∞∏‡±á‡∞µ‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø"):
            users_df.loc[users_df['username'] == st.session_state.username, 'about'] = about
            users_df.loc[users_df['username'] == st.session_state.username, 'dob'] = str(dob)
            users_df.to_csv(USER_CSV, index=False)
            st.success("‡∞µ‡∞ø‡∞µ‡∞∞‡∞æ‡∞≤‡±Å ‡∞®‡∞µ‡±Ä‡∞ï‡∞∞‡∞ø‡∞Ç‡∞ö‡∞¨‡∞°‡±ç‡∞°‡∞æ‡∞Ø‡∞ø!")
            st.rerun()

if not st.session_state.logged_in:
    login_signup()
else:
    st.sidebar.title(f"‡∞π‡∞≤‡±ã, {st.session_state.username}")
    option = st.sidebar.radio("‡∞®‡∞æ‡∞µ‡∞ø‡∞ó‡±á‡∞∑‡∞®‡±ç", ["üè† ‡∞π‡±ã‡∞Æ‡±ç", "‚ûï ‡∞ï‡±ä‡∞§‡±ç‡∞§ ‡∞™‡±ã‡∞∏‡±ç‡∞ü‡±ç", "üë§ ‡∞™‡±ç‡∞∞‡±ä‡∞´‡±à‡∞≤‡±ç", "üîì ‡∞≤‡∞æ‡∞ó‡±ç ‡∞Ö‡∞µ‡±Å‡∞ü‡±ç"])

    if option == "üë§ ‡∞™‡±ç‡∞∞‡±ä‡∞´‡±à‡∞≤‡±ç":
        show_profile()
    elif option == "üîì ‡∞≤‡∞æ‡∞ó‡±ç ‡∞Ö‡∞µ‡±Å‡∞ü‡±ç":
        st.session_state.logged_in = False
        st.session_state.username = None
        st.experimental_rerun()
    else:
        st.info("‡∞á‡∞§‡∞∞ ‡∞∏‡±Ü‡∞ï‡±ç‡∞∑‡∞®‡±ç‡∞≤‡±Å ‡∞§‡±ç‡∞µ‡∞∞‡∞≤‡±ã ‡∞Ö‡∞Ç‡∞¶‡±Å‡∞¨‡∞æ‡∞ü‡±Å‡∞≤‡±ã‡∞ï‡∞ø ‡∞µ‡∞∏‡±ç‡∞§‡∞æ‡∞Ø‡∞ø.")
                                          
