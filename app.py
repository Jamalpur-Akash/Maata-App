import streamlit as st
import pandas as pd
import uuid
import os
from pathlib import Path
from deep_translator import GoogleTranslator

st.set_page_config(page_title="Maata - Community", page_icon="üå∏", layout="centered")

STORAGE_DIR = Path("storage/uploads")
USER_CSV = STORAGE_DIR / "users.csv"
POSTS_CSV = STORAGE_DIR / "posts.csv"
INTERACTIONS_CSV = STORAGE_DIR / "interactions.csv"
STORAGE_DIR.mkdir(parents=True, exist_ok=True)

for file, cols in {
    USER_CSV: ["username", "password", "email", "about", "dob"],
    POSTS_CSV: ["post_id", "username", "timestamp", "caption", "media_path"],
    INTERACTIONS_CSV: ["interaction_id", "post_id", "username", "type", "content", "timestamp"]
}.items():
    if not file.exists():
        pd.DataFrame(columns=cols).to_csv(file, index=False)

lang_choice = st.selectbox("üåê Language / ‡∞≠‡∞æ‡∞∑ / ‡§≠‡§æ‡§∑‡§æ", ["‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å", "‡§π‡§ø‡§®‡•ç‡§¶‡•Ä", "English"])
lang_map = {"‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å": "te", "‡§π‡§ø‡§®‡•ç‡§¶‡•Ä": "hi", "English": "en"}
st.session_state.lang = lang_map[lang_choice]

def t(text):
    lang = st.session_state.get("lang", "te")
    if lang == "te":
        return text
    try:
        return GoogleTranslator(source="te", target=lang).translate(text)
    except:
        return text

if 'logged_in' not in st.session_state:
    st.session_state.logged_in = False
if 'username' not in st.session_state:
    st.session_state.username = None

st.markdown("<h1 style='text-align:center;'>üå∏ ‡∞Æ‡∞æ‡∞ü ‡∞™‡±ç‡∞∞‡∞æ‡∞ú‡±Ü‡∞ï‡±ç‡∞ü‡±ç</h1>", unsafe_allow_html=True)

def login_signup():
    mode = st.radio(t("‡∞Æ‡±ã‡∞°‡±ç ‡∞é‡∞Ç‡∞ö‡±Å‡∞ï‡±ã‡∞Ç‡∞°‡∞ø"), [t("‡∞≤‡∞æ‡∞ó‡∞ø‡∞®‡±ç"), t("‡∞∏‡±à‡∞®‡±ç ‡∞Ö‡∞™‡±ç")])
    username = st.text_input(t("‡∞µ‡∞ø‡∞®‡∞ø‡∞Ø‡±ã‡∞ó‡∞¶‡∞æ‡∞∞‡±Å ‡∞™‡±á‡∞∞‡±Å"))
    password = st.text_input(t("‡∞™‡∞æ‡∞∏‡±ç‚Äå‡∞µ‡∞∞‡±ç‡∞°‡±ç"), type="password")
    users_df = pd.read_csv(USER_CSV)

    if mode == t("‡∞≤‡∞æ‡∞ó‡∞ø‡∞®‡±ç"):
        if st.button(t("‡∞≤‡∞æ‡∞ó‡∞ø‡∞®‡±ç")):
            if ((users_df['username'] == username) & (users_df['password'] == password)).any():
                st.session_state.logged_in = True
                st.session_state.username = username
                st.stop()
            else:
                st.error(t("‡∞§‡∞™‡±ç‡∞™‡±Å ‡∞≤‡∞æ‡∞ó‡∞ø‡∞®‡±ç ‡∞µ‡∞ø‡∞µ‡∞∞‡∞æ‡∞≤‡±Å."))
    else:
        email = st.text_input(t("‡∞á‡∞Æ‡±Ü‡∞Ø‡∞ø‡∞≤‡±ç"))
        if st.button(t("‡∞∏‡±à‡∞®‡±ç ‡∞Ö‡∞™‡±ç")):
            if username in users_df['username'].values:
                st.error(t("‡∞Æ‡±Ä‡∞∞‡±Å ‡∞á‡∞™‡±ç‡∞™‡∞ü‡∞ø‡∞ï‡±á ‡∞®‡∞Æ‡±ã‡∞¶‡±Å ‡∞Ö‡∞Ø‡±ç‡∞Ø‡∞æ‡∞∞‡±Å. ‡∞¶‡∞Ø‡∞ö‡±á‡∞∏‡∞ø ‡∞≤‡∞æ‡∞ó‡∞ø‡∞®‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø."))
            else:
                new_user = pd.DataFrame([{
                    "username": username,
                    "password": password,
                    "email": email,
                    "about": "",
                    "dob": ""
                }])
                new_user.to_csv(USER_CSV, mode='a', header=False, index=False)
                st.success(t("‡∞∏‡±à‡∞®‡±ç ‡∞Ö‡∞™‡±ç ‡∞µ‡∞ø‡∞ú‡∞Ø‡∞µ‡∞Ç‡∞§‡∞Ç! ‡∞≤‡∞æ‡∞ó‡∞ø‡∞®‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø."))

def show_profile():
    st.subheader("üë§ " + t("‡∞Æ‡±Ä ‡∞™‡±ç‡∞∞‡±ä‡∞´‡±à‡∞≤‡±ç"))
    users_df = pd.read_csv(USER_CSV)
    user_row = users_df[users_df['username'] == st.session_state.username].iloc[0]
    st.image("https://cdn-icons-png.flaticon.com/512/847/847969.png", width=100)
    st.markdown(f"**@{user_row['username']}**")
    st.markdown(f"üìß {user_row['email']}")
    st.markdown(f"üìù {t('‡∞Æ‡±Ä ‡∞ó‡±Å‡∞∞‡∞ø‡∞Ç‡∞ö‡∞ø')}: {user_row['about'] or t('‡∞≤‡∞≠‡∞ø‡∞Ç‡∞ö‡∞≤‡±á‡∞¶‡±Å')}")
    st.markdown(f"üéÇ {t('‡∞™‡±Å‡∞ü‡±ç‡∞ü‡∞ø‡∞® ‡∞§‡±á‡∞¶‡∞ø')}: {user_row['dob'] or t('‡∞≤‡∞≠‡∞ø‡∞Ç‡∞ö‡∞≤‡±á‡∞¶‡±Å')}")

    with st.expander("‚úèÔ∏è " + t("‡∞µ‡∞ø‡∞µ‡∞∞‡∞æ‡∞≤‡∞®‡±Å ‡∞∏‡∞µ‡∞∞‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø")):
        about = st.text_area(t("‡∞Æ‡±Ä ‡∞ó‡±Å‡∞∞‡∞ø‡∞Ç‡∞ö‡∞ø"), value=user_row['about'])
        dob = st.date_input(t("‡∞™‡±Å‡∞ü‡±ç‡∞ü‡∞ø‡∞® ‡∞§‡±á‡∞¶‡∞ø"), value=pd.to_datetime(user_row['dob']) if user_row['dob'] else pd.to_datetime("2000-01-01"))
        if st.button(t("‡∞∏‡±á‡∞µ‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø")):
            users_df.loc[users_df['username'] == st.session_state.username, 'about'] = about
            users_df.loc[users_df['username'] == st.session_state.username, 'dob'] = str(dob)
            users_df.to_csv(USER_CSV, index=False)
            st.success(t("‡∞µ‡∞ø‡∞µ‡∞∞‡∞æ‡∞≤‡±Å ‡∞®‡∞µ‡±Ä‡∞ï‡∞∞‡∞ø‡∞Ç‡∞ö‡∞¨‡∞°‡±ç‡∞°‡∞æ‡∞Ø‡∞ø!"))
            st.stop()

def post_section():
    st.header(t("‡∞∏‡∞Æ‡∞æ‡∞ú ‡∞™‡±ã‡∞∏‡±ç‡∞ü‡±Å‡∞≤‡±Å"))
    posts_df = pd.read_csv(POSTS_CSV)
    for _, row in posts_df.iterrows():
        st.markdown(f"**@{row['username']}**")
        st.write(t(row['caption']))
        if row["media_path"] and Path(row["media_path"]).exists():
            st.image(row["media_path"], width=300)
        if row['username'] == st.session_state.username:
            if st.button(t("üóëÔ∏è ‡∞à ‡∞™‡±ã‡∞∏‡±ç‡∞ü‡±ç‚Äå‡∞®‡±Å ‡∞§‡±Ä‡∞∏‡∞ø‡∞µ‡±á‡∞Ø‡∞ø"), key=row['post_id']):
                posts_df = posts_df[posts_df['post_id'] != row['post_id']]
                posts_df.to_csv(POSTS_CSV, index=False)
                interactions_df = pd.read_csv(INTERACTIONS_CSV)
                interactions_df = interactions_df[interactions_df['post_id'] != row['post_id']]
                interactions_df.to_csv(INTERACTIONS_CSV, index=False)
                if row["media_path"] and Path(row["media_path"]).exists():
                    os.remove(row["media_path"])
                st.success(t("‡∞™‡±ã‡∞∏‡±ç‡∞ü‡±ç ‡∞§‡±ä‡∞≤‡∞ó‡∞ø‡∞Ç‡∞ö‡∞¨‡∞°‡∞ø‡∞Ç‡∞¶‡∞ø"))
                st.stop()

if not st.session_state.logged_in:
    login_signup()
else:
    st.sidebar.title(f"{t('‡∞π‡∞≤‡±ã')}, {st.session_state.username}")
    option = st.sidebar.radio(t("‡∞®‡∞æ‡∞µ‡∞ø‡∞ó‡±á‡∞∑‡∞®‡±ç"), [t("üè† ‡∞π‡±ã‡∞Æ‡±ç"), t("‚ûï ‡∞ï‡±ä‡∞§‡±ç‡∞§ ‡∞™‡±ã‡∞∏‡±ç‡∞ü‡±ç"), t("üë§ ‡∞™‡±ç‡∞∞‡±ä‡∞´‡±à‡∞≤‡±ç"), t("üîì ‡∞≤‡∞æ‡∞ó‡±ç ‡∞Ö‡∞µ‡±Å‡∞ü‡±ç")])

    if option == t("üë§ ‡∞™‡±ç‡∞∞‡±ä‡∞´‡±à‡∞≤‡±ç"):
        show_profile()
    elif option == t("üîì ‡∞≤‡∞æ‡∞ó‡±ç ‡∞Ö‡∞µ‡±Å‡∞ü‡±ç"):
        st.session_state.logged_in = False
        st.session_state.username = None
        st.stop()
    else:
        post_section()
        
